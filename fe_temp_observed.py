import os
import numpy as np
from astropy.modeling import models, fitting, Fittable1DModel, Parameter


class FeII_template_obs(Fittable1DModel):

    inputs = ('x',)
    outputs = ('y',)

    shift = Parameter()
    width = Parameter()
    i_r_l1 = Parameter()

    center_l1 = [
        4026.36,
        4093.66,
        4178.86,
        4258.16,
        4278.10,
        4296.57,
        4303.17,
        4314.29,
        4369.40,
        4385.38,
        4403.03,
        4416.82,
        4472.92,
        4489.18,
        4491.40,
        4508.28,
        4515.34,
        4520.22,
        4522.63,
        4534.17,
        4549.47,
        4555.89,
        4563.76,
        4576.33,
        4582.83,
        4583.83,
        4589.98,
        4595.68,
        4601.41,
        4620.51,
        4629.34,
        4656.97,
        4666.75,
        4713.18,
        4720.15,
        4731.44,
        4886.93,
        4923.92,
        5018.45,
        5030.64,
        5041.06,
        5056.35,
        5132.67,
        5154.40,
        5169.03,
        5188.68,
        5197.57,
        5234.62,
        5238.58,
        5254.92,
        5256.89,
        5264.80,
        5275.99,
        5284.09,
        5316.61,
        5316.78,
        5337.71,
        5362.86,
        5414.09,
        5425.27,
        5432.98]
    i_l1 = [
        0.08,
        0.06,
        0.06,
        0.05,
        0.08,
        0.07,
        0.11,
        0.05,
        0.10,
        0.06,
        0.08,
        0.09,
        0.18,
        0.04,
        0.04,
        0.12,
        0.10,
        0.09,
        0.09,
        0.05,
        0.08,
        0.13,
        0.11,
        0.07,
        0.08,
        0.08,
        0.10,
        0.07,
        0.03,
        0.10,
        0.15,
        0.11,
        0.12,
        0.03,
        0.01,
        0.06,
        0.06,
        0.16,
        0.16,
        0.10,
        0.04,
        0.03,
        0.13,
        0.10,
        0.16,
        0.06,
        0.13,
        0.14,
        0.04,
        0.02,
        0.02,
        0.15,
        0.07,
        0.11,
        0.18,
        0.06,
        0.11,
        0.08,
        0.07,
        0.04,
        0.08]

    @staticmethod
    def evaluate(x, shift, width, i_r_l1):
        res = models.Lorentz1D(i_r_l1 * FeII_template_obs.i_l1[0], FeII_template_obs.center_l1[0] + shift, width * np.sqrt(3 / 2) * FeII_template_obs.center_l1[0] / 299792.458)
        for i in range(1, len(FeII_template_obs.center_l1)):
            res = res + models.Lorentz1D(i_r_l1 * FeII_template_obs.i_l1[i], FeII_template_obs.center_l1[i] + shift, width * np.sqrt(3 / 2) * FeII_template_obs.center_l1[i] / 299792.458)
        return res(x)

if __name__ != "main":
    pass
